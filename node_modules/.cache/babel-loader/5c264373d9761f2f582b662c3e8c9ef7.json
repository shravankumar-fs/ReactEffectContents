{"ast":null,"code":"var _jsxFileName = \"/Users/shravankumar/Documents/Arena/React/3-useeffect/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useReducer } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') return {\n    value: action.value,\n    isValid: action.value.includes('@')\n  };\n  if (action.type === 'INPUT_BLUR') return {\n    value: state.value,\n    isValid: state.value.includes('@')\n  };\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') return {\n    value: action.value,\n    isValid: action.value.length > 6\n  };\n  if (action.type === 'INPUT_BLUR') return {\n    value: state.value,\n    isValid: state.value.length > 6\n  };\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, emailDispatch] = useReducer(emailReducer, {\n    value: '',\n    isValid: null\n  });\n  const [passwordState, passwordDispatch] = useReducer(passwordReducer, {\n    value: '',\n    isValid: null\n  }); // useEffect(() => {\n  //   const int = setTimeout(() => {\n  //     setFormIsValid(\n  //       enteredEmail.includes('@') && enteredPassword.trim().length > 6\n  //     );\n  //   }, 500);\n  //   return () => {\n  //     clearInterval(int);\n  //   };\n  // }, [enteredEmail, enteredPassword]);\n\n  const emailChangeHandler = event => {\n    emailDispatch({\n      type: 'USER_INPUT',\n      value: event.target.value\n    });\n    setFormIsValid(event.target.value.includes('@') && enteredPassword.trim().length > 0);\n  };\n\n  const passwordChangeHandler = event => {\n    setEnteredPassword(event.target.value);\n    setFormIsValid(emailState.isValid && event.target.value.trim().length > 0);\n  };\n\n  const validateEmailHandler = () => {\n    emailDispatch({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, enteredPassword);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordIsValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: enteredPassword,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"CAtXS6bZkSOxCZuM874MGKkDSdY=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/shravankumar/Documents/Arena/React/3-useeffect/src/components/Login/Login.js"],"names":["React","useState","useReducer","Card","classes","Button","emailReducer","state","action","type","value","isValid","includes","passwordReducer","length","Login","props","formIsValid","setFormIsValid","emailState","emailDispatch","passwordState","passwordDispatch","emailChangeHandler","event","target","enteredPassword","trim","passwordChangeHandler","setEnteredPassword","validateEmailHandler","validatePasswordHandler","setPasswordIsValid","submitHandler","preventDefault","onLogin","login","control","invalid","passwordIsValid","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState, useReducer } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT')\n    return { value: action.value, isValid: action.value.includes('@') };\n  if (action.type === 'INPUT_BLUR')\n    return { value: state.value, isValid: state.value.includes('@') };\n  return { value: '', isValid: false };\n};\nconst passwordReducer = (state, action) => {\n  if (action.type === 'USER_INPUT')\n    return { value: action.value, isValid: action.value.length > 6 };\n  if (action.type === 'INPUT_BLUR')\n    return { value: state.value, isValid: state.value.length > 6 };\n  return { value: '', isValid: false };\n};\nconst Login = (props) => {\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, emailDispatch] = useReducer(emailReducer, {\n    value: '',\n    isValid: null,\n  });\n\n  const [passwordState, passwordDispatch] = useReducer(passwordReducer, {\n    value: '',\n    isValid: null,\n  });\n\n  // useEffect(() => {\n  //   const int = setTimeout(() => {\n  //     setFormIsValid(\n  //       enteredEmail.includes('@') && enteredPassword.trim().length > 6\n  //     );\n  //   }, 500);\n  //   return () => {\n  //     clearInterval(int);\n  //   };\n  // }, [enteredEmail, enteredPassword]);\n\n  const emailChangeHandler = (event) => {\n    emailDispatch({ type: 'USER_INPUT', value: event.target.value });\n\n    setFormIsValid(\n      event.target.value.includes('@') && enteredPassword.trim().length > 0\n    );\n  };\n\n  const passwordChangeHandler = (event) => {\n    setEnteredPassword(event.target.value);\n    setFormIsValid(emailState.isValid && event.target.value.trim().length > 0);\n  };\n  const validateEmailHandler = () => {\n    emailDispatch({ type: 'INPUT_BLUR' });\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, enteredPassword);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor='email'>E-Mail</label>\n          <input\n            type='email'\n            id='email'\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordIsValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor='password'>Password</label>\n          <input\n            type='password'\n            id='password'\n            value={enteredPassword}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type='submit' className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}